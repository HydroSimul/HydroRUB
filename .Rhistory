install.packages("devtools")
devtools::document()
library(HydroRUB)
devtools::document()
#' @export
eva_KGE <- function(num_Sim, num_Obs, num_Scal = c(1, 1, 1)) {
r_ <- sqrt(eva_R2(num_Sim, num_Obs))
alpha_ <- var(num_Sim, na.rm = TRUE) / var(num_Obs, na.rm = TRUE)
beta_ <- mean(num_Sim, na.rm = TRUE) / mean(num_Obs, na.rm = TRUE)
1- sqrt(num_Scal[1] * (alpha_ - 1)^2 +
num_Scal[2] * (beta_ - 1)^2 +
num_Scal[3] * (r_ - 1)^2)
}
eva_KGE(1:5, 6:2)
#' @export
eva_R2 <- function(num_Sim, num_Obs) {
mean_Sim <- mean(num_Sim, na.rm = TRUE)
mean_Obs <- mean(num_Obs, na.rm = TRUE)
(mean((num_Obs - mean_Obs) * (num_Sim - mean_Sim), na.rm = TRUE))^2 /
(mean((num_Obs - mean_Obs)^2, na.rm = TRUE) * mean((num_Sim - mean_Sim)^2, na.rm = TRUE))
}
eva_KGE(1:5, 6:2)
hydroGOF::KGE(1:5, 6:2)
eva_ME <- function(num_Sim, num_Obs) {
(num_Sim - num_Obs) |> mean(na.rm = TRUE)
}
#' @export
eva_MAE <- function(num_Sim, num_Obs) {
abs(num_Sim - num_Obs) |> mean(na.rm = TRUE)
}
#' @export
eva_MSE <- function(num_Sim, num_Obs) {
(num_Sim - num_Obs)^2 |> mean(na.rm = TRUE)
}
#' @export
eva_RMSE <- function(num_Sim, num_Obs) {
(num_Sim - num_Obs)^2 |> mean(na.rm = TRUE) |> sqrt()
}
#' @export
eva_R2 <- function(num_Sim, num_Obs) {
mean_Sim <- mean(num_Sim, na.rm = TRUE)
mean_Obs <- mean(num_Obs, na.rm = TRUE)
(mean((num_Obs - mean_Obs) * (num_Sim - mean_Sim), na.rm = TRUE))^2 /
(mean((num_Obs - mean_Obs)^2, na.rm = TRUE) * mean((num_Sim - mean_Sim)^2, na.rm = TRUE))
}
#' @export
eva_NSE <- function(num_Sim, num_Obs) {
mean_Obs <- mean(num_Obs, na.rm = TRUE)
1- mean((num_Sim - num_Obs)^2, na.rm = TRUE) / mean((num_Obs - mean_Obs)^2, na.rm = TRUE)
}
hydroGOF::NSE(1:5, 6:2)
eva_NSE(1:5, 6:2)
hydroGOF::rmse(1:5, 6:2)
eva_RMSE(1:5, 6:2)
hydroGOF::mse(1:5, 6:2)
eva_MSE(1:5, 6:2)
eva_MAE(1:5, 6:2)
hydroGOF::mae(1:5, 6:2)
eva_ME(1:5, 6:2)
hydroGOF::me(1:5, 6:2)
#' @export
eva_KGE <- function(num_Sim, num_Obs, num_Scal = c(1, 1, 1)) {
# Ensure the input vectors are numeric
num_Sim <- as.numeric(num_Sim)
num_Obs <- as.numeric(num_Obs)
# Remove NA values from both vectors
valid_indices <- complete.cases(num_Sim, num_Obs)
num_Sim <- num_Sim[valid_indices]
num_Obs <- num_Obs[valid_indices]
# Calculate the correlation coefficient
r_ <- cor(num_Sim, num_Obs)
# Calculate the ratio of standard deviations
alpha_ <- sd(num_Sim) / sd(num_Obs)
# Calculate the ratio of means
beta_ <- mean(num_Sim) / mean(num_Obs)
# Calculate the KGE
1 - sqrt(num_Scal[1] * (r_ - 1)^2 +
num_Scal[2] * (alpha_ - 1)^2 +
num_Scal[3] * (beta_ - 1)^2)
}
hydroGOF::KGE(1:5, 6:2)
eva_KGE(1:5, 6:2)
eva_KGE(c(NA, 1:5), c(6:2, NA))
hydroGOF::KGE(c(NA, 1:5), c(6:2, NA))
devtools::document()
pkgload::dev_help('evaluate_metrics')
devtools::document()
devtools::document()
pkgdown::build_site_github_pages()
pkgdown::build_site()
devtools::document()
devtools::document()
pkgdown::build_site()
devtools::document()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
devtools::document()
devtools::document()
Rdpack::viewRd("man/evaluate_metrics.Rd")
devtools::document()
Rdpack::viewRd("man/evaluate_metrics.Rd")
devtools::document()
Rdpack::viewRd("man/evaluate_metrics.Rd")
pkgdown::build_site()
devtools::load_all()
devtools::document()
pkgdown::build_site_github_pages()
pkgdown::build_site()
pkgdown::build_site_github_pages()
devtools::document()
pkgdown::build_site_github_pages()
devtools::document()
pkgdown::build_site_github_pages()
devtools::document()
Rdpack::viewRd(man/evaluate_metrics.Rd)
Rdpack::viewRd(./man/evaluate_metrics.Rd)
Rdpack::viewRd("man/evaluate_metrics.Rd")
pkgdown::build_site_github_pages()
pkgdown::preview_page('reference/evaluate_metrics.html')
1.8*4
